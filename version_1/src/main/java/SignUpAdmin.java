
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Shilpi Mazumdar
 */
public class SignUpAdmin extends javax.swing.JFrame {

    /**
     * Creates new form SignUpAdmin
     */
    
    Connection connection;
    PreparedStatement prestatement;
    
    public SignUpAdmin() {
        initComponents();
        try {
            try {
                // To establish connection with the SQL DB and server (link/stream)
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(SignUpAdmin.class.getName()).log(Level.SEVERE, null, ex);
            }
            // To establish connection with database
            connection = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/airlinemavendatabase", "root", "Lakshmi@06");
        } catch (SQLException ex) {
            Logger.getLogger(SignUpAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TO create the AdminID automatically for the admin
        autoID();
    }

    // MOST IMPORTANT FUNCTION FOR CONNECTION WITH SQL DB
    public void autoID() {
        try {
            //The above established connection helps to create statement
            java.sql.Statement statement = connection.createStatement();
            
            // Obtaining and storing the result of the statement and executing query indirectly on MYsql software
            ResultSet res = statement.executeQuery("Select MAX(idadministrator) from administrator");
            
            // Next pointer/record
            res.next();
        
            //Handling the obtained result
            if(res.getString("MAX(idadministrator)") == null) {
                //Setting default customerID when res null
                adminID.setText("ADMN330001");
            } else {
                // Get the MAX result and extract subtring (Last 3 Numbers) and increment
                long iD = Long.parseLong(res.getString("MAX(idadministrator)").substring(6,res.getString("MAX(idadministrator)").length()));
                iD++;

                adminID.setText("ADMN33" + String.format("%03d", iD));
            }
        } catch (SQLException ex) {
            Logger.getLogger(CreateNewAdministrator.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public static String doHashing(String password) {
        try {
            //In this Hashing Function we have used Message Digest Algorithm to secure the admin password
            MessageDigest messageDigest = MessageDigest.getInstance("MD5");
            messageDigest.update(password.getBytes());
            byte[] resultByteArray = messageDigest.digest();
            StringBuilder sb = new StringBuilder();
            
            for (byte b : resultByteArray) 
                sb.append(String.format("%02x", b));
            
            return sb.toString();
        } catch (NoSuchAlgorithmException ex) {
            Logger.getLogger(SignUpAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
        return "";
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        adminID = new javax.swing.JTextField();
        AdminID = new javax.swing.JLabel();
        banner = new javax.swing.JLabel();
        terminalduty = new javax.swing.JComboBox<>();
        passportno = new javax.swing.JTextField();
        profilelevel = new javax.swing.JComboBox<>();
        PassportNo = new javax.swing.JLabel();
        firstname = new javax.swing.JTextField();
        Profilelevel = new javax.swing.JLabel();
        LastName = new javax.swing.JLabel();
        Password = new javax.swing.JLabel();
        Contactno = new javax.swing.JLabel();
        Gender = new javax.swing.JLabel();
        terminalDuty = new javax.swing.JLabel();
        Email = new javax.swing.JLabel();
        finishregistration = new javax.swing.JButton();
        female = new javax.swing.JRadioButton();
        male = new javax.swing.JRadioButton();
        dob = new com.toedter.calendar.JDateChooser();
        password = new javax.swing.JTextField();
        lastname = new javax.swing.JTextField();
        DOB = new javax.swing.JLabel();
        contactno = new javax.swing.JTextField();
        FirstName = new javax.swing.JLabel();
        email = new javax.swing.JTextField();
        resetdata = new javax.swing.JButton();
        cancelregistration = new javax.swing.JButton();
        verify = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adminID.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(adminID, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 90, 160, -1));

        AdminID.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        AdminID.setForeground(new java.awt.Color(255, 255, 255));
        AdminID.setText("Admin ID");
        getContentPane().add(AdminID, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 89, -1));

        banner.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        banner.setForeground(new java.awt.Color(255, 255, 255));
        banner.setText("New Administrator Registration Portal");
        getContentPane().add(banner, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 30, 320, 29));

        terminalduty.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        terminalduty.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Terminal", "Domestic D1", "Domestic D2", "International A1", "International A3", "Service Runway", "Cargo Port", " " }));
        getContentPane().add(terminalduty, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, -1, -1));

        passportno.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(passportno, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 210, 160, -1));

        profilelevel.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        profilelevel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Profile", "Executive - D1", "Executive D2", "Executive - A1", "Executive - A3", "Chief Manager - Service Runway", "Assistant Manager - Service Runway", "Chief Manager - Cargo Port", "Assistant Manager - Cargo Port", "Passenger Chief - Departure", "Passenger Chief - Arrival", "General Staff - D1", "General Staff - D2", "General Staff - A1", "General Staff - A3" }));
        getContentPane().add(profilelevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 170, 170, -1));

        PassportNo.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        PassportNo.setForeground(new java.awt.Color(255, 255, 255));
        PassportNo.setText("Passport No.");
        getContentPane().add(PassportNo, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 210, 89, -1));

        firstname.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(firstname, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 160, -1));

        Profilelevel.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Profilelevel.setForeground(new java.awt.Color(255, 255, 255));
        Profilelevel.setText("Profile Level");
        getContentPane().add(Profilelevel, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 170, 89, -1));

        LastName.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        LastName.setForeground(new java.awt.Color(255, 255, 255));
        LastName.setText("Last Name");
        getContentPane().add(LastName, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 130, 89, -1));

        Password.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Password.setForeground(new java.awt.Color(255, 255, 255));
        Password.setText("Password");
        getContentPane().add(Password, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 90, 89, -1));

        Contactno.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Contactno.setForeground(new java.awt.Color(255, 255, 255));
        Contactno.setText("Contact No.");
        getContentPane().add(Contactno, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 250, 89, -1));

        Gender.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Gender.setForeground(new java.awt.Color(255, 255, 255));
        Gender.setText("Gender");
        getContentPane().add(Gender, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 89, -1));

        terminalDuty.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        terminalDuty.setForeground(new java.awt.Color(255, 255, 255));
        terminalDuty.setText("Terminal Duty");
        getContentPane().add(terminalDuty, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 100, -1));

        Email.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Email.setForeground(new java.awt.Color(255, 255, 255));
        Email.setText("Email ");
        getContentPane().add(Email, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 250, 89, -1));

        finishregistration.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        finishregistration.setText("Finish Registration");
        finishregistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishregistrationActionPerformed(evt);
            }
        });
        getContentPane().add(finishregistration, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 360, 150, -1));

        female.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        female.setForeground(new java.awt.Color(255, 255, 255));
        female.setText("Female");
        getContentPane().add(female, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, 90, -1));

        male.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        male.setForeground(new java.awt.Color(255, 255, 255));
        male.setText("Male");
        getContentPane().add(male, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 210, -1, -1));
        getContentPane().add(dob, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 170, 160, -1));

        password.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        password.setText("Please create a password");
        getContentPane().add(password, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 174, -1));

        lastname.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(lastname, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 130, 174, -1));

        DOB.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        DOB.setForeground(new java.awt.Color(255, 255, 255));
        DOB.setText("Date of Birth");
        getContentPane().add(DOB, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 170, 89, -1));

        contactno.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(contactno, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 250, 160, -1));

        FirstName.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        FirstName.setForeground(new java.awt.Color(255, 255, 255));
        FirstName.setText("First Name");
        getContentPane().add(FirstName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 130, 89, -1));

        email.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(email, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 250, 160, -1));

        resetdata.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        resetdata.setText("Reset Data");
        resetdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetdataActionPerformed(evt);
            }
        });
        getContentPane().add(resetdata, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 290, 100, -1));

        cancelregistration.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        cancelregistration.setText("Cancel Registration");
        cancelregistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelregistrationActionPerformed(evt);
            }
        });
        getContentPane().add(cancelregistration, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 360, 150, -1));

        verify.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        verify.setText("verify");
        verify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyActionPerformed(evt);
            }
        });
        getContentPane().add(verify, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 250, 70, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Shilpi Mazumdar\\Desktop\\Acciojob Projects\\Airline Mgmt\\wallpaperflare.com_wallpaper4.jpg")); // NOI18N
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 790, 490));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void finishregistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishregistrationActionPerformed
        // Retrieveing data input by the administrator and storing in the administrators table
        String adminid = adminID.getText();
        String passworD = doHashing(password.getText());
        String firstName = firstname.getText();
        String lastName = lastname.getText();

        // To get selected combobox data for Terminal Duty and Profile Level
        String profileLevel = profilelevel.getSelectedItem().toString();
        String terminaldutY = terminalduty.getSelectedItem().toString();
        String gender = "";
        if(male.isSelected())
        gender = "Male";
        else if(female.isSelected())
        gender = "Female";

        String Passport = passportno.getText();
        String emailaddress = email.getText();
        String contact = contactno.getText();

        // Date Format
        Date date = dob.getDate();
        // Converting date into a string VARCHAR
        DateFormat dateformat = new SimpleDateFormat("yy-mm-dd");
        String dateofBirth = dateformat.format(date);

        try {
            // Preparing a statement to run a query in SQL
            prestatement = connection.prepareStatement("insert into administrator(idadministrator, password, terminalDuty, profileLevel, firstName, lastName, DOB, PassportNo, Gender, Email, contactNo)values(?,?,?,?,?,?,?,?,?,?,?)");
            // Set String of every field of administrators table - Similar to the Strings created above
            prestatement.setString(1, adminid);
            prestatement.setString(2, passworD);
            prestatement.setString(3, terminaldutY);
            prestatement.setString(4, profileLevel);
            prestatement.setString(5, firstName);
            prestatement.setString(6, lastName);
            prestatement.setString(7, dateofBirth);
            prestatement.setString(8, Passport);
            prestatement.setString(9, gender);
            prestatement.setString(10, emailaddress);
            prestatement.setString(11, contact);

            //Executing the query
            prestatement.executeUpdate();

            if(male.isSelected() && female.isSelected()){
                //Showing a message to select one option from male and female(gender)
                JOptionPane.showMessageDialog(null, "Please select one Gender Type");
            } else
            //Showing a message after successful addition of new passenger data to the passengers table
            JOptionPane.showMessageDialog(null, "Administrator registration successful !");

        } catch (SQLException ex) {
            Logger.getLogger(SignUpAdmin.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_finishregistrationActionPerformed

    private void resetdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetdataActionPerformed
        // To reset data :
        password.setText("Please create a password");
        firstname.setText("");
        lastname.setText("");
        // To remove dateChooser(dob) selection
        dob. setCalendar(null);
        passportno.setText("");
        // To remove radioButton(gender) selection
        male.setSelected(false);
        female.setSelected(false);
        email.setText("");
        contactno.setText("");
        // TO de-select combobox(Terminal Duty) selection
        profilelevel.setSelectedIndex(0);
        terminalduty.setSelectedIndex(0);
    }//GEN-LAST:event_resetdataActionPerformed

    private void cancelregistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelregistrationActionPerformed
        // To cancel the registration window
        this.dispose();
    }//GEN-LAST:event_cancelregistrationActionPerformed

    private void verifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyActionPerformed
        // To verify the email input by the administrator :
        if (!(Pattern.matches("^[a-zA-Z0-9]+[@]{1}+[a-zA-Z0-9]+[.]{1}+[a-zA-Z0-9]+$", email.getText())))
            JOptionPane.showMessageDialog(null, "Please enter a valid email", "Error", JOptionPane.ERROR_MESSAGE);
        else
            JOptionPane.showMessageDialog(null, "Valid email registered", "Verified", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_verifyActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SignUpAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SignUpAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SignUpAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SignUpAdmin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SignUpAdmin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel AdminID;
    private javax.swing.JLabel Contactno;
    private javax.swing.JLabel DOB;
    private javax.swing.JLabel Email;
    private javax.swing.JLabel FirstName;
    private javax.swing.JLabel Gender;
    private javax.swing.JLabel LastName;
    private javax.swing.JLabel PassportNo;
    private javax.swing.JLabel Password;
    private javax.swing.JLabel Profilelevel;
    private javax.swing.JTextField adminID;
    private javax.swing.JLabel banner;
    private javax.swing.JButton cancelregistration;
    private javax.swing.JTextField contactno;
    private com.toedter.calendar.JDateChooser dob;
    private javax.swing.JTextField email;
    private javax.swing.JRadioButton female;
    private javax.swing.JButton finishregistration;
    private javax.swing.JTextField firstname;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField lastname;
    private javax.swing.JRadioButton male;
    private javax.swing.JTextField passportno;
    private javax.swing.JTextField password;
    private javax.swing.JComboBox<String> profilelevel;
    private javax.swing.JButton resetdata;
    private javax.swing.JLabel terminalDuty;
    private javax.swing.JComboBox<String> terminalduty;
    private javax.swing.JButton verify;
    // End of variables declaration//GEN-END:variables
}
