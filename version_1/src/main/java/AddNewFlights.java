
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author Shilpi Mazumdar
 */
public class AddNewFlights extends javax.swing.JInternalFrame {

    /**
     * Creates new form NewPassenger
     */
    Connection connection;
    PreparedStatement prestatement;
    public AddNewFlights() {
        initComponents();
        try {
            try {
                // To establish connection with the SQL DB and server (link/stream)
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddNewFlights.class.getName()).log(Level.SEVERE, null, ex);
            }
            // To establish connection with database
            connection = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/airlinemavendatabase", "root", "Lakshmi@06");
        } catch (SQLException ex) {
            Logger.getLogger(AddNewFlights.class.getName()).log(Level.SEVERE, null, ex);
        }
        // TO create the FlightID automatically for the Flight
        autoID();
    }
    
    // MOST IMPORTANT FUNCTION FOR CONNECTION WITH SQL DB
    public void autoID() {
        try {
            //The above established connection helps to create statement
            java.sql.Statement statement = connection.createStatement();
            
            // Obtaining and storing the result of the statement and executing query indirectly on MYsql software
            ResultSet res = statement.executeQuery("Select MAX(idflights) from flights");
            
            // Next pointer/record
            res.next();
        
            //Handling the obtained result
            if(res.getString("MAX(idflights)") == null) {
                //Setting default customerID when res null
                flightid.setText("FLGT160001");
            } else {
                // Get the MAX result and extract subtring (Last 3 Numbers) and increment
                long iD = Long.parseLong(res.getString("MAX(idflights)").substring(6,res.getString("MAX(idflights)").length()));
                iD++;

                flightid.setText("FLGT16" + String.format("%03d", iD));
            }
        } catch (SQLException ex) {
            Logger.getLogger(AddNewFlights.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        banner = new javax.swing.JLabel();
        flightid = new javax.swing.JTextField();
        FlightName = new javax.swing.JLabel();
        Departure = new javax.swing.JLabel();
        Arrival = new javax.swing.JLabel();
        Fareperperson = new javax.swing.JLabel();
        departuretime = new javax.swing.JLabel();
        arrivaltime = new javax.swing.JLabel();
        totalseats = new javax.swing.JLabel();
        arrvtime = new javax.swing.JTextField();
        fareperperson = new javax.swing.JTextField();
        depttime = new javax.swing.JTextField();
        finishregistration = new javax.swing.JButton();
        cancelregistration = new javax.swing.JButton();
        resetdata = new javax.swing.JButton();
        totalSeats = new javax.swing.JTextField();
        flightname = new javax.swing.JTextField();
        arrival = new javax.swing.JComboBox<>();
        flightID = new javax.swing.JLabel();
        flighttype = new javax.swing.JLabel();
        domestic = new javax.swing.JRadioButton();
        international = new javax.swing.JRadioButton();
        departure = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        setMaximumSize(new java.awt.Dimension(786, 489));
        setMinimumSize(new java.awt.Dimension(786, 489));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        banner.setFont(new java.awt.Font("Cambria Math", 1, 18)); // NOI18N
        banner.setForeground(new java.awt.Color(255, 255, 255));
        banner.setText("New Flight Registration Portal");
        getContentPane().add(banner, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 20, 260, 29));

        flightid.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(flightid, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 61, 160, -1));

        FlightName.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        FlightName.setForeground(new java.awt.Color(255, 255, 255));
        FlightName.setText("Flight Name");
        getContentPane().add(FlightName, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 103, 89, -1));

        Departure.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Departure.setForeground(new java.awt.Color(255, 255, 255));
        Departure.setText("Departure ");
        getContentPane().add(Departure, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 150, 110, -1));

        Arrival.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Arrival.setForeground(new java.awt.Color(255, 255, 255));
        Arrival.setText("Arrival ");
        getContentPane().add(Arrival, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 89, -1));

        Fareperperson.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Fareperperson.setForeground(new java.awt.Color(255, 255, 255));
        Fareperperson.setText("Fare per Person");
        getContentPane().add(Fareperperson, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 270, 110, -1));

        departuretime.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        departuretime.setForeground(new java.awt.Color(255, 255, 255));
        departuretime.setText("Departure Time");
        getContentPane().add(departuretime, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 150, 100, -1));

        arrivaltime.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        arrivaltime.setForeground(new java.awt.Color(255, 255, 255));
        arrivaltime.setText("Arrival Time");
        getContentPane().add(arrivaltime, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 190, 89, -1));

        totalseats.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        totalseats.setForeground(new java.awt.Color(255, 255, 255));
        totalseats.setText("Total Seats");
        getContentPane().add(totalseats, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 230, 110, -1));

        arrvtime.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(arrvtime, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 190, 120, -1));

        fareperperson.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(fareperperson, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 270, 90, -1));

        depttime.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(depttime, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 150, 120, -1));

        finishregistration.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        finishregistration.setText("Finish Registration");
        finishregistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishregistrationActionPerformed(evt);
            }
        });
        getContentPane().add(finishregistration, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 340, 150, -1));

        cancelregistration.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        cancelregistration.setText("Cancel Registration");
        cancelregistration.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelregistrationActionPerformed(evt);
            }
        });
        getContentPane().add(cancelregistration, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, 150, -1));

        resetdata.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        resetdata.setText("Reset Data");
        resetdata.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetdataActionPerformed(evt);
            }
        });
        getContentPane().add(resetdata, new org.netbeans.lib.awtextra.AbsoluteConstraints(570, 240, 100, -1));

        totalSeats.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(totalSeats, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 230, 50, -1));

        flightname.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(flightname, new org.netbeans.lib.awtextra.AbsoluteConstraints(145, 101, 160, -1));

        arrival.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        arrival.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "IGI, New Delhi", "T1, New Delhi", "T2, New Delhi", "Kempegowda, Banglore", "Kormangla, Banglore", "Chattrapati Shivaji, Mumbai", "Navi Mumbai, Mumbai", "Dabolim, Goa", "Panjim, Goa", "Heathrow, London", "Gatwick, London", "Oxford, London", "Changi, Singapore", "Chek Lap Kok, Hong Kong", "Incheon International, South Korea", "Daegu International, South Korea", "Vancouver International, Canada", "Calgary International, Canada", "Toronto Pearson International, Canada", "Denver International, US", "Dallas/Fort Worth International, US", "JFK, US", "Paris Charles de Gaulle, France", "Lyon-Saint Exupery, France", "Frankfurt, Germany", "Hamburg, Germany", "Munich International, Germany", "Abu Dhabi International, UAE", "Dubai International, UAE", " ", " ", " ", " " }));
        getContentPane().add(arrival, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 190, -1, -1));

        flightID.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        flightID.setForeground(new java.awt.Color(255, 255, 255));
        flightID.setText("Flight ID");
        getContentPane().add(flightID, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 63, 89, -1));

        flighttype.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        flighttype.setForeground(new java.awt.Color(255, 255, 255));
        flighttype.setText("Flight Type");
        getContentPane().add(flighttype, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 89, -1));

        domestic.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        domestic.setForeground(new java.awt.Color(255, 255, 255));
        domestic.setText("Domestic");
        getContentPane().add(domestic, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 90, 110, -1));

        international.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        international.setForeground(new java.awt.Color(255, 255, 255));
        international.setText("International");
        getContentPane().add(international, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 60, 110, -1));

        departure.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        departure.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select ", "IGI, New Delhi", "T1, New Delhi", "T2, New Delhi", "Kempegowda, Banglore", "Kormangla, Banglore", "Chattrapati Shivaji, Mumbai", "Navi Mumbai, Mumbai", "Dabolim, Goa", "Panjim, Goa", "Heathrow, London", "Gatwick, London", "Oxford, London", "Changi, Singapore", "Chek Lap Kok, Hong Kong", "Incheon International, South Korea", "Daegu International, South Korea", "Vancouver International, Canada", "Calgary International, Canada", "Toronto Pearson International, Canada", "Denver International, US", "Dallas/Fort Worth International, US", "JFK, US", "Paris Charles de Gaulle, France", "Lyon-Saint Exupery, France", "Frankfurt, Germany", "Hamburg, Germany", "Munich International, Germany", "Abu Dhabi International, UAE", "Dubai International, UAE", " ", " ", " ", " " }));
        getContentPane().add(departure, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 150, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Shilpi Mazumdar\\Desktop\\Acciojob Projects\\Airline Mgmt\\wallpaperflare.com_wallpaper4 (1).jpg")); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 730, 420));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void resetdataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetdataActionPerformed
       // To reset data : 
        flightname.setText("");
        depttime.setText("");
        arrvtime.setText("");
        totalSeats.setText("");
        fareperperson.setText("");
        // To remove radioButton(gender) selection
        international.setSelected(false);
        domestic.setSelected(false);
        // To remove combobox(departure and arrival airports) selection
        departure.setSelectedIndex(0);
        arrival.setSelectedIndex(0);
    }//GEN-LAST:event_resetdataActionPerformed

    private void cancelregistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelregistrationActionPerformed
        // To cancel registration window :
        this.hide();
    }//GEN-LAST:event_cancelregistrationActionPerformed

    private void finishregistrationActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishregistrationActionPerformed
        // Retrieveing data input by the admin and storing in the flights table
        String flightId = flightid.getText();
        String flightName = flightname.getText();
        String flightType = "";
        if(international.isSelected()) 
            flightType = "International";
        else if(domestic.isSelected())
            flightType = "domestic";
        
        String departurE = departure.getSelectedItem().toString();
        String arrivaL = arrival.getSelectedItem().toString();
        
        String departureTime = depttime.getText();
        String arrivalTime = arrvtime.getText();
       
        String seatsTotal = totalSeats.getText();
        String farePerPerson = fareperperson.getText();
        
        try {
            // Preparing a statement to run a query in SQL
            prestatement = connection.prepareStatement("insert into flights(idflights, flightName, flightType, departure, arrival, departuretime, arrivaltime, seats, fareperperson)values(?,?,?,?,?,?,?,?,?)");
            // Set String of every field of Flight table - Similar to the Strings created above
            prestatement.setString(1, flightId);
            prestatement.setString(2, flightName);
            prestatement.setString(3, flightType);
            prestatement.setString(4, departurE);
            prestatement.setString(5, arrivaL);
            prestatement.setString(6, departureTime);
            prestatement.setString(7, arrivalTime);
            prestatement.setString(8, seatsTotal);
            prestatement.setString(9, farePerPerson);
            
            //Executing the query
            prestatement.executeUpdate();
            
            
            if(international.isSelected() && domestic.isSelected()){
                //Showing a message to select one option from international and domestic(flightType)
                JOptionPane.showMessageDialog(null, "Please select one Flight Type");
            } else
                //Showing a message after successful addition of new flight data to the flights table
                JOptionPane.showMessageDialog(null, "Flight registration successful !");
        
        } catch (SQLException ex) {
                Logger.getLogger(AddNewFlights.class.getName()).log(Level.SEVERE, null, ex);
            }
    }//GEN-LAST:event_finishregistrationActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Arrival;
    private javax.swing.JLabel Departure;
    private javax.swing.JLabel Fareperperson;
    private javax.swing.JLabel FlightName;
    private javax.swing.JComboBox<String> arrival;
    private javax.swing.JLabel arrivaltime;
    private javax.swing.JTextField arrvtime;
    private javax.swing.JLabel banner;
    private javax.swing.JButton cancelregistration;
    private javax.swing.JComboBox<String> departure;
    private javax.swing.JLabel departuretime;
    private javax.swing.JTextField depttime;
    private javax.swing.JRadioButton domestic;
    private javax.swing.JTextField fareperperson;
    private javax.swing.JButton finishregistration;
    private javax.swing.JLabel flightID;
    private javax.swing.JTextField flightid;
    private javax.swing.JTextField flightname;
    private javax.swing.JLabel flighttype;
    private javax.swing.JRadioButton international;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton resetdata;
    private javax.swing.JTextField totalSeats;
    private javax.swing.JLabel totalseats;
    // End of variables declaration//GEN-END:variables
}
