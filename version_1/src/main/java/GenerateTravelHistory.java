
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
import java.awt.print.*;
import java.text.*;
import javax.swing.JTable;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */

/**
 *
 * @author Shilpi Mazumdar
 */
public class GenerateTravelHistory extends javax.swing.JInternalFrame {

    /**
     * Creates new form GenerateTravelHistory
     */
    
    Connection connection;
    PreparedStatement prestate;
    
    public GenerateTravelHistory() {
        initComponents();
        try {
            try {
                // To establish connection with the SQL DB and server (link/stream)
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(GenerateTravelHistory.class.getName()).log(Level.SEVERE, null, ex);
            }
            // To establish connection with database
            connection = (Connection) DriverManager.getConnection("jdbc:mysql://localhost/airlinemavendatabase", "root", "Lakshmi@06");
        } catch (SQLException ex) {
            Logger.getLogger(GenerateTravelHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        banner1 = new javax.swing.JLabel();
        banner2 = new javax.swing.JLabel();
        passengerID = new javax.swing.JLabel();
        passengerid = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        travelhistory = new javax.swing.JTable();
        fetch = new javax.swing.JButton();
        printhistory = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setClosable(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        banner1.setFont(new java.awt.Font("Cambria", 1, 18)); // NOI18N
        banner1.setForeground(new java.awt.Color(255, 255, 255));
        banner1.setText("Travel History Generator");
        getContentPane().add(banner1, new org.netbeans.lib.awtextra.AbsoluteConstraints(292, 17, -1, -1));

        banner2.setFont(new java.awt.Font("Cambria", 0, 15)); // NOI18N
        banner2.setForeground(new java.awt.Color(255, 255, 255));
        banner2.setText("Please enter your Passenger ID to continue");
        getContentPane().add(banner2, new org.netbeans.lib.awtextra.AbsoluteConstraints(261, 45, -1, -1));

        passengerID.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        passengerID.setForeground(new java.awt.Color(255, 255, 255));
        passengerID.setText("PassengerID");
        getContentPane().add(passengerID, new org.netbeans.lib.awtextra.AbsoluteConstraints(92, 99, 91, -1));

        passengerid.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        getContentPane().add(passengerid, new org.netbeans.lib.awtextra.AbsoluteConstraints(189, 96, 160, -1));

        travelhistory.setFont(new java.awt.Font("Cambria", 0, 12)); // NOI18N
        travelhistory.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Booking ID", "Flight Name", "Dept", "Arrival", "Date of Travel", "Payment"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        travelhistory.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(travelhistory);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 160, 700, 224));

        fetch.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        fetch.setText("Fetch");
        fetch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fetchActionPerformed(evt);
            }
        });
        getContentPane().add(fetch, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 96, -1, -1));

        printhistory.setFont(new java.awt.Font("Cambria", 0, 13)); // NOI18N
        printhistory.setText("Print History");
        printhistory.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printhistoryActionPerformed(evt);
            }
        });
        getContentPane().add(printhistory, new org.netbeans.lib.awtextra.AbsoluteConstraints(582, 96, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Shilpi Mazumdar\\Desktop\\Acciojob Projects\\Airline Mgmt\\wallpaperflare.com_wallpaper4 (1).jpg")); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 780, 460));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void fetchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fetchActionPerformed
        // To fetch travel history from the database :
        // To fetch Flight Details :
        try {
            int columns;
            String passengeriD = passengerid.getText();
            
            //The above established connection helps to create statement
            java.sql.Statement statement = connection.createStatement();
            
            prestate = connection.prepareStatement("select * from flighttickets where idpassengers = ?");
            prestate.setString(1, passengeriD);
            
            //To get result and display on the table
            ResultSet res = prestate.executeQuery();
            
            // Helps to push flight fetched data on the UI Table
            ResultSetMetaData resMetaData = res.getMetaData();
            
            //Count of Total columns
            columns = resMetaData.getColumnCount();
            
            //In which model we want to display the table contents
            DefaultTableModel defTableModel = (DefaultTableModel) travelhistory.getModel();
            
            //0th row
            defTableModel.setRowCount(0);
            
            // Writing over the table
            while(res.next()){
                
                @SuppressWarnings("UseOfObsoleteCollectionType")
                Vector v2 = new Vector();
                
                for(int i=1 ; i <= columns ; i++){
                    v2.add(res.getString("idbooking"));
                    v2.add(res.getString("flightName"));
                    v2.add(res.getString("departure"));
                    v2.add(res.getString("arrival"));
                    v2.add(res.getString("dot"));
                    v2.add(res.getString("totalfare"));
                }
                defTableModel.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(GenerateTravelHistory.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_fetchActionPerformed

    private void printhistoryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printhistoryActionPerformed
        // To print the travel history :
        MessageFormat header = new MessageFormat("Travel History Print");
        MessageFormat footer = new MessageFormat("Page{0,number,integer}");
        try {
            travelhistory.print(JTable.PrintMode.NORMAL, header, footer);
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Cannot print %s%n", e.getMessage());
        }
    }//GEN-LAST:event_printhistoryActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel banner1;
    private javax.swing.JLabel banner2;
    private javax.swing.JButton fetch;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel passengerID;
    private javax.swing.JTextField passengerid;
    private javax.swing.JButton printhistory;
    private javax.swing.JTable travelhistory;
    // End of variables declaration//GEN-END:variables
}
